#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.19
#  in conjunction with Tcl version 8.6
#    Apr 01, 2019 04:34:00 PM +0300  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import main_support
from Utils import logger
from Utils import configuration
from Algorithm.main_flow import main as main_regression
from tkinter.filedialog import askopenfilenames, askopenfilename
from tkinter import messagebox

config = configuration.config().setup()
log = logger.setup()
#log = logger.add_log_file(log, config)
doc_paths = None
vec_path = None

STYLE_RANGE = [i for i in range(2, 100)]

def start_regression(texts_input, vec_input):
    # we should check if all the files are exist before running the algorithm
    if (texts_input):
        doc_paths = texts_input
    else:
        messagebox.showerror("Input Error", "You must insert a texts")
        return

    vec_path = vec_input if (vec_input) else None

    main = main_regression(config, doc_paths, vec_path)
    main.run()

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    main_support.set_Tk_var()
    top = Toplevel1 (root)
    main_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    main_support.set_Tk_var()
    top = Toplevel1 (w)
    main_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("616x469+388+146")
        top.title("Clustring Text Tool")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.TNotebook1 = ttk.Notebook(top)
        self.TNotebook1.place(relx=0.0, rely=0.0, relheight=0.93, relwidth=0.964)

        self.TNotebook1.configure(width=594)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t0 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t0, padding=3)
        self.TNotebook1.tab(0, text="General",compound="left",underline="-1",)
        self.TNotebook1_t0.configure(background="#d9d9d9")
        self.TNotebook1_t0.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t0.configure(highlightcolor="black")
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(1, text="Advanced Option", compound="none"
                ,underline="-1", )
        self.TNotebook1_t1.configure(background="#d9d9d9")
        self.TNotebook1_t1.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t1.configure(highlightcolor="black")
        self.TNotebook1_t2 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t2, padding=3)
        self.TNotebook1.tab(2, text="Running",compound="left",underline="-1",)
        self.TNotebook1_t2.configure(background="#d9d9d9")
        self.TNotebook1_t2.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t2.configure(highlightcolor="black")
        self.TNotebook1_t3 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t3, padding=3)
        self.TNotebook1.tab(3, text="Statistics", compound="none", underline="-1"
                ,)
        self.TNotebook1_t3.configure(background="#d9d9d9")
        self.TNotebook1_t3.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t3.configure(highlightcolor="black")
        self.TNotebook1_t4 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t4, padding=3)
        self.TNotebook1.tab(4, text="About",compound="none",underline="-1",)
        self.TNotebook1_t4.configure(background="#d9d9d9")
        self.TNotebook1_t4.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t4.configure(highlightcolor="black")

        self.load_text_button = tk.Button(self.TNotebook1_t0)
        self.load_text_button.place(relx=0.203, rely=0.171, height=24, width=67)
        self.load_text_button.configure(activebackground="#ececec")
        self.load_text_button.configure(activeforeground="#000000")
        self.load_text_button.configure(background="#d9d9d9")
        self.load_text_button.configure(disabledforeground="#a3a3a3")
        self.load_text_button.configure(foreground="#000000")
        self.load_text_button.configure(highlightbackground="#d9d9d9")
        self.load_text_button.configure(highlightcolor="black")
        self.load_text_button.configure(pady="0")
        self.load_text_button.configure(text='''Load Texts''')
        self.load_text_button.configure(command=self.load_text_button_dialog)

        self.texts_entry = tk.Entry(self.TNotebook1_t0)
        self.texts_entry.place(relx=0.339, rely=0.171,height=20, relwidth=0.278)
        self.texts_entry.configure(background="white")
        self.texts_entry.configure(disabledforeground="#a3a3a3")
        self.texts_entry.configure(font="TkFixedFont")
        self.texts_entry.configure(foreground="#000000")
        self.texts_entry.configure(highlightbackground="#d9d9d9")
        self.texts_entry.configure(highlightcolor="black")
        self.texts_entry.configure(insertbackground="black")
        self.texts_entry.configure(selectbackground="#c4c4c4")
        self.texts_entry.configure(selectforeground="black")

        self.from_spinbox = tk.Spinbox(self.TNotebook1_t0, from_=5.0, to=100.0)
        self.from_spinbox.place(relx=0.356, rely=0.341, relheight=0.046
                , relwidth=0.076)
        self.from_spinbox.configure(activebackground="#f9f9f9")
        self.from_spinbox.configure(background="white")
        self.from_spinbox.configure(buttonbackground="#d9d9d9")
        self.from_spinbox.configure(disabledforeground="#a3a3a3")
        self.from_spinbox.configure(foreground="black")
        self.from_spinbox.configure(highlightbackground="black")
        self.from_spinbox.configure(highlightcolor="black")
        self.from_spinbox.configure(insertbackground="black")
        self.from_spinbox.configure(selectbackground="#c4c4c4")
        self.from_spinbox.configure(selectforeground="black")
        self.from_spinbox.configure(values=STYLE_RANGE)
        var = tk.StringVar(root)
        var.set(config.get("CLUSTER", "from"))
        self.from_spinbox.configure(textvariable=var)

        var = tk.StringVar(root)
        var.set(config.get("CLUSTER", "to"))
        self.to_spinbox = tk.Spinbox(self.TNotebook1_t0, from_=20.0, to=100.0)
        self.to_spinbox.place(relx=0.492, rely=0.341, relheight=0.046
                , relwidth=0.076)
        self.to_spinbox.configure(activebackground="#f9f9f9")
        self.to_spinbox.configure(background="white")
        self.to_spinbox.configure(buttonbackground="#d9d9d9")
        self.to_spinbox.configure(disabledforeground="#a3a3a3")
        self.to_spinbox.configure(foreground="black")
        self.to_spinbox.configure(highlightbackground="black")
        self.to_spinbox.configure(highlightcolor="black")
        self.to_spinbox.configure(insertbackground="black")
        self.to_spinbox.configure(selectbackground="#c4c4c4")
        self.to_spinbox.configure(selectforeground="black")
        self.to_spinbox.configure(values=STYLE_RANGE)
        var = tk.StringVar(root)
        var.set(config.get("CLUSTER", "to"))
        self.to_spinbox.configure(textvariable=var)

        self.Label4 = tk.Label(self.TNotebook1_t0)
        self.Label4.place(relx=0.169, rely=0.341, height=21, width=75)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Styles Range:''')

        self.Label5 = tk.Label(self.TNotebook1_t0)
        self.Label5.place(relx=0.432, rely=0.317, height=31, width=31)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''-''')

        self.load_vec_button = tk.Button(self.TNotebook1_t0)
        self.load_vec_button.place(relx=0.22, rely=0.78, height=24, width=59)
        self.load_vec_button.configure(activebackground="#ececec")
        self.load_vec_button.configure(activeforeground="#000000")
        self.load_vec_button.configure(background="#d9d9d9")
        self.load_vec_button.configure(disabledforeground="#a3a3a3")
        self.load_vec_button.configure(foreground="#000000")
        self.load_vec_button.configure(highlightbackground="#d9d9d9")
        self.load_vec_button.configure(highlightcolor="black")
        self.load_vec_button.configure(pady="0")
        self.load_vec_button.configure(state='disabled')
        self.load_vec_button.configure(text='''Load Vec''')
        self.load_vec_button.configure(command=self.load_vec_button_dialog)

        self.add_word_emedding_Cbutton3 = tk.Checkbutton(self.TNotebook1_t0)
        self.add_word_emedding_Cbutton3.place(relx=0.136, rely=0.634, relheight=0.061
                , relwidth=0.236)
        self.add_word_emedding_Cbutton3.configure(activebackground="#ececec")
        self.add_word_emedding_Cbutton3.configure(activeforeground="#000000")
        self.add_word_emedding_Cbutton3.configure(background="#d9d9d9")
        self.add_word_emedding_Cbutton3.configure(disabledforeground="#a3a3a3")
        self.add_word_emedding_Cbutton3.configure(foreground="#000000")
        self.add_word_emedding_Cbutton3.configure(highlightbackground="#d9d9d9")
        self.add_word_emedding_Cbutton3.configure(highlightcolor="black")
        self.add_word_emedding_Cbutton3.configure(justify='left')
        self.add_word_emedding_Cbutton3.configure(text='''Add Word Emedding''')
        self.add_word_emedding_Cbutton_var = tk.IntVar()
        self.add_word_emedding_Cbutton3.configure(variable=self.add_word_emedding_Cbutton_var)
        self.add_word_emedding_Cbutton3.configure(command=self.add_word_embedding_checkbox)
        self.add_word_emedding_Cbutton3.deselect()



        self.vec_entry = tk.Entry(self.TNotebook1_t0)
        self.vec_entry.place(relx=0.356, rely=0.78,height=20, relwidth=0.278)
        self.vec_entry.configure(background="white")
        self.vec_entry.configure(disabledforeground="#a3a3a3")
        self.vec_entry.configure(font="TkFixedFont")
        self.vec_entry.configure(foreground="#000000")
        self.vec_entry.configure(highlightbackground="#d9d9d9")
        self.vec_entry.configure(highlightcolor="black")
        self.vec_entry.configure(insertbackground="black")
        self.vec_entry.configure(selectbackground="#c4c4c4")
        self.vec_entry.configure(selectforeground="black")
        self.vec_entry.configure(state='disabled')

        self.TSeparator2 = ttk.Separator(self.TNotebook1_t0)
        self.TSeparator2.place(relx=0.085, rely=0.537, relwidth=0.847)

        self.Checkbutton4 = tk.Checkbutton(self.TNotebook1_t1)
        self.Checkbutton4.place(relx=0.051, rely=0.024, relheight=0.061
                , relwidth=0.107)
        self.Checkbutton4.configure(activebackground="#ececec")
        self.Checkbutton4.configure(activeforeground="#000000")
        self.Checkbutton4.configure(background="#d9d9d9")
        self.Checkbutton4.configure(disabledforeground="#a3a3a3")
        self.Checkbutton4.configure(foreground="#000000")
        self.Checkbutton4.configure(highlightbackground="#d9d9d9")
        self.Checkbutton4.configure(highlightcolor="black")
        self.Checkbutton4.configure(justify='left')
        self.Checkbutton4.configure(text='''Enable''')
        self.Checkbutton4.configure(variable=main_support.che81)

        self.Labelframe2 = tk.LabelFrame(self.TNotebook1_t1)
        self.Labelframe2.place(relx=0.068, rely=0.585, relheight=0.378
                , relwidth=0.898)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="black")
        self.Labelframe2.configure(text='''Word2Vec''')
        self.Labelframe2.configure(background="#d9d9d9")
        self.Labelframe2.configure(highlightbackground="#d9d9d9")
        self.Labelframe2.configure(highlightcolor="black")
        self.Labelframe2.configure(width=400)

        self.Radiobutton5 = tk.Radiobutton(self.Labelframe2)
        self.Radiobutton5.place(relx=0.434, rely=0.194, relheight=0.161
                , relwidth=0.155, bordermode='ignore')
        self.Radiobutton5.configure(activebackground="#ececec")
        self.Radiobutton5.configure(activeforeground="#000000")
        self.Radiobutton5.configure(background="#d9d9d9")
        self.Radiobutton5.configure(disabledforeground="#a3a3a3")
        self.Radiobutton5.configure(foreground="#000000")
        self.Radiobutton5.configure(highlightbackground="#d9d9d9")
        self.Radiobutton5.configure(highlightcolor="black")
        self.Radiobutton5.configure(justify='left')
        self.Radiobutton5.configure(state='disabled')
        self.Radiobutton5.configure(text='''Skip Gram''')

        self.Radiobutton6 = tk.Radiobutton(self.Labelframe2)
        self.Radiobutton6.place(relx=0.679, rely=0.194, relheight=0.161
                , relwidth=0.119, bordermode='ignore')
        self.Radiobutton6.configure(activebackground="#ececec")
        self.Radiobutton6.configure(activeforeground="#000000")
        self.Radiobutton6.configure(background="#d9d9d9")
        self.Radiobutton6.configure(disabledforeground="#a3a3a3")
        self.Radiobutton6.configure(foreground="#000000")
        self.Radiobutton6.configure(highlightbackground="#d9d9d9")
        self.Radiobutton6.configure(highlightcolor="black")
        self.Radiobutton6.configure(justify='left')
        self.Radiobutton6.configure(state='disabled')
        self.Radiobutton6.configure(text='''CBOW''')

        self.Radiobutton7 = tk.Radiobutton(self.Labelframe2)
        self.Radiobutton7.place(relx=0.434, rely=0.452, relheight=0.161
                , relwidth=0.134, bordermode='ignore')
        self.Radiobutton7.configure(activebackground="#ececec")
        self.Radiobutton7.configure(activeforeground="#000000")
        self.Radiobutton7.configure(background="#d9d9d9")
        self.Radiobutton7.configure(disabledforeground="#a3a3a3")
        self.Radiobutton7.configure(foreground="#000000")
        self.Radiobutton7.configure(highlightbackground="#d9d9d9")
        self.Radiobutton7.configure(highlightcolor="black")
        self.Radiobutton7.configure(justify='left')
        self.Radiobutton7.configure(state='disabled')
        self.Radiobutton7.configure(text='''Softmax''')

        self.Radiobutton8 = tk.Radiobutton(self.Labelframe2)
        self.Radiobutton8.place(relx=0.679, rely=0.452, relheight=0.161
                , relwidth=0.242, bordermode='ignore')
        self.Radiobutton8.configure(activebackground="#ececec")
        self.Radiobutton8.configure(activeforeground="#000000")
        self.Radiobutton8.configure(background="#d9d9d9")
        self.Radiobutton8.configure(disabledforeground="#a3a3a3")
        self.Radiobutton8.configure(foreground="#000000")
        self.Radiobutton8.configure(highlightbackground="#d9d9d9")
        self.Radiobutton8.configure(highlightcolor="black")
        self.Radiobutton8.configure(justify='left')
        self.Radiobutton8.configure(state='disabled')
        self.Radiobutton8.configure(text='''Negative Sampling''')

        self.Label8 = tk.Label(self.Labelframe2)
        self.Label8.place(relx=0.208, rely=0.194, height=21, width=74
                , bordermode='ignore')
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(activeforeground="black")
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(highlightbackground="#d9d9d9")
        self.Label8.configure(highlightcolor="black")
        self.Label8.configure(text='''Architecture:''')

        self.Label9 = tk.Label(self.Labelframe2)
        self.Label9.place(relx=0.255, rely=0.452, height=21, width=43
                , bordermode='ignore')
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(activeforeground="black")
        self.Label9.configure(background="#d9d9d9")
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(highlightbackground="#d9d9d9")
        self.Label9.configure(highlightcolor="black")
        self.Label9.configure(text='''Model:''')

        self.Label10 = tk.Label(self.Labelframe2)
        self.Label10.place(relx=0.142, rely=0.71, height=21, width=102
                , bordermode='ignore')
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(activeforeground="black")
        self.Label10.configure(background="#d9d9d9")
        self.Label10.configure(disabledforeground="#a3a3a3")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(highlightbackground="#d9d9d9")
        self.Label10.configure(highlightcolor="black")
        self.Label10.configure(text='''Context Windows:''')

        self.Spinbox5 = tk.Spinbox(self.Labelframe2, from_=1.0, to=100.0)
        self.Spinbox5.place(relx=0.396, rely=0.71, relheight=0.123, relwidth=0.16
                , bordermode='ignore')
        self.Spinbox5.configure(activebackground="#f9f9f9")
        self.Spinbox5.configure(background="white")
        self.Spinbox5.configure(buttonbackground="#d9d9d9")
        self.Spinbox5.configure(disabledforeground="#a3a3a3")
        self.Spinbox5.configure(foreground="black")
        self.Spinbox5.configure(highlightbackground="black")
        self.Spinbox5.configure(highlightcolor="black")
        self.Spinbox5.configure(insertbackground="black")
        self.Spinbox5.configure(selectbackground="#c4c4c4")
        self.Spinbox5.configure(selectforeground="black")
        self.Spinbox5.configure(state='disabled')
        self.Spinbox5.configure(textvariable=main_support.spinbox)

        self.Labelframe1 = tk.LabelFrame(self.TNotebook1_t1)
        self.Labelframe1.place(relx=0.068, rely=0.268, relheight=0.305
                , relwidth=0.898)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Chunks''')
        self.Labelframe1.configure(background="#d9d9d9")
        self.Labelframe1.configure(highlightbackground="#d9d9d9")
        self.Labelframe1.configure(highlightcolor="black")
        self.Labelframe1.configure(width=530)

        self.Spinbox6 = tk.Spinbox(self.Labelframe1, from_=1.0, to=100.0)
        self.Spinbox6.place(relx=0.396, rely=0.24, relheight=0.152, relwidth=0.16
                , bordermode='ignore')
        self.Spinbox6.configure(activebackground="#f9f9f9")
        self.Spinbox6.configure(background="white")
        self.Spinbox6.configure(buttonbackground="#d9d9d9")
        self.Spinbox6.configure(disabledforeground="#a3a3a3")
        self.Spinbox6.configure(foreground="black")
        self.Spinbox6.configure(highlightbackground="black")
        self.Spinbox6.configure(highlightcolor="black")
        self.Spinbox6.configure(insertbackground="black")
        self.Spinbox6.configure(selectbackground="#c4c4c4")
        self.Spinbox6.configure(selectforeground="black")
        self.Spinbox6.configure(state='disabled')
        self.Spinbox6.configure(textvariable=main_support.spinbox)

        self.Spinbox7 = tk.Spinbox(self.Labelframe1, from_=1.0, to=100.0)
        self.Spinbox7.place(relx=0.396, rely=0.56, relheight=0.152, relwidth=0.16
                , bordermode='ignore')
        self.Spinbox7.configure(activebackground="#f9f9f9")
        self.Spinbox7.configure(background="white")
        self.Spinbox7.configure(buttonbackground="#d9d9d9")
        self.Spinbox7.configure(disabledforeground="#a3a3a3")
        self.Spinbox7.configure(foreground="black")
        self.Spinbox7.configure(highlightbackground="black")
        self.Spinbox7.configure(highlightcolor="black")
        self.Spinbox7.configure(insertbackground="black")
        self.Spinbox7.configure(selectbackground="#c4c4c4")
        self.Spinbox7.configure(selectforeground="black")
        self.Spinbox7.configure(state='disabled')
        self.Spinbox7.configure(textvariable=main_support.spinbox)

        self.Label6 = tk.Label(self.Labelframe1)
        self.Label6.place(relx=0.217, rely=0.24, height=21, width=67
                , bordermode='ignore')
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''Chunk Size:''')

        self.Label7 = tk.Label(self.Labelframe1)
        self.Label7.place(relx=0.17, rely=0.56, height=21, width=95
                , bordermode='ignore')
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Delay Parameter:''')

        self.Labelframe5 = tk.LabelFrame(self.TNotebook1_t1)
        self.Labelframe5.place(relx=0.068, rely=0.098, relheight=0.159
                , relwidth=0.898)
        self.Labelframe5.configure(relief='groove')
        self.Labelframe5.configure(foreground="black")
        self.Labelframe5.configure(text='''TF-IDF''')
        self.Labelframe5.configure(background="#d9d9d9")
        self.Labelframe5.configure(highlightbackground="#d9d9d9")
        self.Labelframe5.configure(highlightcolor="black")
        self.Labelframe5.configure(width=150)

        self.Label2 = tk.Label(self.Labelframe5)
        self.Label2.place(relx=0.019, rely=0.462, height=21, width=176
                , bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''Number of Words in Document:''')

        self.Spinbox1 = tk.Spinbox(self.Labelframe5, from_=1.0, to=100.0)
        self.Spinbox1.place(relx=0.396, rely=0.462, relheight=0.292
                , relwidth=0.16, bordermode='ignore')
        self.Spinbox1.configure(activebackground="#f9f9f9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(buttonbackground="#d9d9d9")
        self.Spinbox1.configure(disabledforeground="#a3a3a3")
        self.Spinbox1.configure(foreground="black")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(highlightcolor="black")
        self.Spinbox1.configure(insertbackground="black")
        self.Spinbox1.configure(selectbackground="#c4c4c4")
        self.Spinbox1.configure(selectforeground="black")
        self.Spinbox1.configure(state='disabled')
        self.Spinbox1.configure(textvariable=main_support.spinbox)

        self.run_button = tk.Button(self.TNotebook1_t2)
        self.run_button.place(relx=0.458, rely=0.073, height=24, width=38)
        self.run_button.configure(activebackground="#ececec")
        self.run_button.configure(activeforeground="#000000")
        self.run_button.configure(background="#d9d9d9")
        self.run_button.configure(disabledforeground="#a3a3a3")
        self.run_button.configure(foreground="#000000")
        self.run_button.configure(highlightbackground="#d9d9d9")
        self.run_button.configure(highlightcolor="black")
        self.run_button.configure(pady="0")
        self.run_button.configure(text='''RUN!''')
        self.run_button.configure(command=lambda : start_regression(self.texts_entry.get(), self.vec_entry.get()))

        self.Labelframe3 = tk.LabelFrame(self.TNotebook1_t2)
        self.Labelframe3.place(relx=0.051, rely=0.146, relheight=0.768
                , relwidth=0.898)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(foreground="black")
        self.Labelframe3.configure(labelanchor="n")
        self.Labelframe3.configure(text='''Proccessing''')
        self.Labelframe3.configure(background="#d9d9d9")
        self.Labelframe3.configure(highlightbackground="#d9d9d9")
        self.Labelframe3.configure(highlightcolor="black")
        self.Labelframe3.configure(width=530)

        self.Checkbutton5 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton5.place(relx=0.038, rely=0.063, relheight=0.079
                , relwidth=0.155, bordermode='ignore')
        self.Checkbutton5.configure(activebackground="#ececec")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(selectcolor="#ffffffffffff")
        self.Checkbutton5.configure(state='disabled')
        self.Checkbutton5.configure(text='''Word2Vec''')
        self.Checkbutton5.configure(variable=main_support.che119)

        self.Checkbutton5 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton5.place(relx=0.038, rely=0.159, relheight=0.079
                , relwidth=0.115, bordermode='ignore')
        self.Checkbutton5.configure(activebackground="#ececec")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(state='disabled')
        self.Checkbutton5.configure(text='''TF-IDF''')
        self.Checkbutton5.configure(variable=main_support.che119)

        self.Checkbutton5 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton5.place(relx=0.009, rely=0.254, relheight=0.079
                , relwidth=0.228, bordermode='ignore')
        self.Checkbutton5.configure(activebackground="#ececec")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(state='disabled')
        self.Checkbutton5.configure(text='''Filtering Text''')
        self.Checkbutton5.configure(variable=main_support.che119)

        self.Checkbutton5 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton5.place(relx=0.047, rely=0.444, relheight=0.079
                , relwidth=0.247, bordermode='ignore')
        self.Checkbutton5.configure(activebackground="#ececec")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(state='disabled')
        self.Checkbutton5.configure(text='''Create Square Matrix''')
        self.Checkbutton5.configure(variable=main_support.che119)

        self.Checkbutton5 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton5.place(relx=0.038, rely=0.54, relheight=0.079
                , relwidth=0.115, bordermode='ignore')
        self.Checkbutton5.configure(activebackground="#ececec")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(state='disabled')
        self.Checkbutton5.configure(text='''PAM''')
        self.Checkbutton5.configure(variable=main_support.che119)

        self.Checkbutton5 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton5.place(relx=0.057, rely=0.635, relheight=0.079
                , relwidth=0.115, bordermode='ignore')
        self.Checkbutton5.configure(activebackground="#ececec")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(state='disabled')
        self.Checkbutton5.configure(text='''Silhouette''')
        self.Checkbutton5.configure(variable=main_support.che119)

        self.Checkbutton5 = tk.Checkbutton(self.Labelframe3)
        self.Checkbutton5.place(relx=0.009, rely=0.349, relheight=0.079
                , relwidth=0.247, bordermode='ignore')
        self.Checkbutton5.configure(activebackground="#ececec")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify='left')
        self.Checkbutton5.configure(state='disabled')
        self.Checkbutton5.configure(text='''Create Chunks''')
        self.Checkbutton5.configure(variable=main_support.che119)

        self.TProgressbar1 = ttk.Progressbar(self.Labelframe3)
        self.TProgressbar1.place(relx=0.057, rely=0.857, relwidth=0.868
                , relheight=0.0, height=22, bordermode='ignore')
        self.TProgressbar1.configure(mode="indeterminate")

        self.TCombobox1 = ttk.Combobox(self.TNotebook1_t3)
        self.TCombobox1.place(relx=0.237, rely=0.098, relheight=0.051
                , relwidth=0.242)
        self.value_list = ["Documents Clustring", "Clustrs Map", "Interior Clustring",]
        self.TCombobox1.configure(values=self.value_list)
        self.TCombobox1.configure(textvariable=main_support.combobox)
        self.TCombobox1.configure(foreground="#000000")

        self.Label11 = tk.Label(self.TNotebook1_t3)
        self.Label11.place(relx=0.076, rely=0.098, height=21, width=75)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="black")
        self.Label11.configure(text='''Select Graph:''')

        self.Canvas1 = tk.Canvas(self.TNotebook1_t3)
        self.Canvas1.place(relx=0.068, rely=0.317, relheight=0.641
                , relwidth=0.886)
        self.Canvas1.configure(background="#d9d9d9")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(highlightbackground="#d9d9d9")
        self.Canvas1.configure(highlightcolor="black")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(relief='ridge')
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(width=523)

        self.TCombobox2 = ttk.Combobox(self.TNotebook1_t3)
        self.TCombobox2.place(relx=0.237, rely=0.171, relheight=0.051
                , relwidth=0.242)
        self.TCombobox2.configure(textvariable=main_support.combobox)
        self.TCombobox2.configure(takefocus="")

        self.Label11 = tk.Label(self.TNotebook1_t3)
        self.Label11.place(relx=0.034, rely=0.171, height=21, width=105)
        self.Label11.configure(activebackground="#f9f9f9")
        self.Label11.configure(activeforeground="black")
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(highlightbackground="#d9d9d9")
        self.Label11.configure(highlightcolor="black")
        self.Label11.configure(text='''Select Document:''')

        self.Labelframe4 = tk.LabelFrame(self.TNotebook1_t3)
        self.Labelframe4.place(relx=0.542, rely=0.024, relheight=0.232
                , relwidth=0.407)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(foreground="black")
        self.Labelframe4.configure(labelanchor="n")
        self.Labelframe4.configure(text='''Result''')
        self.Labelframe4.configure(background="#d9d9d9")
        self.Labelframe4.configure(highlightbackground="#d9d9d9")
        self.Labelframe4.configure(highlightcolor="black")
        self.Labelframe4.configure(width=240)

        self.Label12 = tk.Label(self.Labelframe4)
        self.Label12.place(relx=0.042, rely=0.211, height=21, width=103
                , bordermode='ignore')
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(background="#d9d9d9")
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="black")
        self.Label12.configure(text='''Number of Styles:''')

        self.Label12 = tk.Label(self.Labelframe4)
        self.Label12.place(relx=0.021, rely=0.421, height=21, width=112
                , bordermode='ignore')
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(background="#d9d9d9")
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="black")
        self.Label12.configure(text='''Max Docs In Style:''')

        self.Label12 = tk.Label(self.Labelframe4)
        self.Label12.place(relx=0.063, rely=0.632, height=21, width=102
                , bordermode='ignore')
        self.Label12.configure(activebackground="#f9f9f9")
        self.Label12.configure(activeforeground="black")
        self.Label12.configure(background="#d9d9d9")
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(highlightbackground="#d9d9d9")
        self.Label12.configure(highlightcolor="black")
        self.Label12.configure(text='''Min Docs In Style:''')

        self.Label13 = tk.Label(self.Labelframe4)
        self.Label13.place(relx=0.542, rely=0.211, height=21, width=54
                , bordermode='ignore')
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(background="#d9d9d9")
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="black")
        self.Label13.configure(text='''5''')

        self.Label13 = tk.Label(self.Labelframe4)
        self.Label13.place(relx=0.542, rely=0.421, height=21, width=54
                , bordermode='ignore')
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(background="#d9d9d9")
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="black")
        self.Label13.configure(text='''7''')

        self.Label13 = tk.Label(self.Labelframe4)
        self.Label13.place(relx=0.542, rely=0.632, height=21, width=54
                , bordermode='ignore')
        self.Label13.configure(activebackground="#f9f9f9")
        self.Label13.configure(activeforeground="black")
        self.Label13.configure(background="#d9d9d9")
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(highlightbackground="#d9d9d9")
        self.Label13.configure(highlightcolor="black")
        self.Label13.configure(text='''2''')

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.422, rely=0.938, height=21, width=87)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Copyright© RK''')

    def add_word_embedding_checkbox(self, event=None):
        set = self.add_word_emedding_Cbutton_var.get()
        if (set):
            self.load_vec_button.configure(state=tk.ACTIVE)
            self.vec_entry.configure(state=tk.NORMAL)
        else:
            self.load_vec_button.configure(state=tk.DISABLED)
            self.vec_entry.configure(state=tk.DISABLED)

    def load_text_button_dialog(self, event=None):
        doc_paths = askopenfilenames(title='Choose a text files', filetypes=[("TEXT Files", ".txt")])
        self.texts_entry.insert(0, doc_paths)


    def load_vec_button_dialog(self, event=None):
        vec_path = askopenfilename(title='Choose a vec file', filetypes=[("VEC Files", ".vec")])
        self.vec_entry.insert(0, vec_path)


    @staticmethod
    def popup1(event, *args, **kwargs):
        Popupmenu1 = tk.Menu(root, tearoff=0)
        Popupmenu1.configure(activebackground="#f9f9f9")
        Popupmenu1.configure(activeborderwidth="1")
        Popupmenu1.configure(activeforeground="black")
        Popupmenu1.configure(background="#d9d9d9")
        Popupmenu1.configure(borderwidth="1")
        Popupmenu1.configure(disabledforeground="#a3a3a3")
        Popupmenu1.configure(font="{Segoe UI} 9")
        Popupmenu1.configure(foreground="black")
        Popupmenu1.post(event.x_root, event.y_root)

if __name__ == '__main__':
    vp_start_gui()





